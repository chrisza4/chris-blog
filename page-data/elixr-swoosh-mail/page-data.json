{"componentChunkName":"component---src-templates-blog-post-js","path":"/elixr-swoosh-mail/","result":{"data":{"site":{"siteMetadata":{"title":"Chris' Dialogue"}},"markdownRemark":{"id":"ed40a853-0cc4-53c3-a36a-0c7402ff0b92","excerpt":"TLDR; When you try to use Swoosh SMTP adapter to send an email, you must configure SSL manually and properly. Source: https://github.com/swoosh/swoosh/issuesâ€¦","html":"<p>TLDR; When you try to use Swoosh SMTP adapter to send an email, you must configure SSL manually and properly.</p>\n<p>Source: <a href=\"https://github.com/swoosh/swoosh/issues/785\">https://github.com/swoosh/swoosh/issues/785</a></p>\n<h2>Cause</h2>\n<p>Somehow, Swoosh is depend on some type or Erlang module <a href=\"https://github.com/gen-smtp/gen_smtp\">gen_smtp</a>.</p>\n<p>When you connect to SMTP that required SSL, normally you will use trusted certificate authorithy provide by OS. But the default behavior of the module does not include doing that, so you need to provide that manually.</p>\n<h2>Solution</h2>\n<ol>\n<li>(Recommended) Use module <code class=\"language-text\">tls_certificate_check</code> to get proper trusted CA and TLS option based on url you provde, and put that into Swoosh option manually.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\"><span class=\"token keyword\">defmodule</span> <span class=\"token module class-name\">YourApp</span><span class=\"token punctuation\">.</span><span class=\"token module class-name\">Mailer</span> <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">use</span> <span class=\"token module class-name\">Swoosh</span><span class=\"token punctuation\">.</span><span class=\"token module class-name\">Mailer</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">otp_app:</span> <span class=\"token atom symbol\">:your_app</span>\n\n  <span class=\"token comment\">## Use this instead of deliver normally</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">deliver_email</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n    <span class=\"token comment\">## Original Config</span>\n    original_config <span class=\"token operator\">=</span> <span class=\"token module class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token function\">get_env</span><span class=\"token punctuation\">(</span><span class=\"token atom symbol\">:your_app</span><span class=\"token punctuation\">,</span> <span class=\"token module class-name\">YourApp</span><span class=\"token punctuation\">.</span><span class=\"token module class-name\">Mailer</span><span class=\"token punctuation\">)</span>\n\n    my_config <span class=\"token operator\">=</span>\n      original_config <span class=\"token operator\">++</span>\n        <span class=\"token punctuation\">[</span>\n          <span class=\"token attr-name\">tls_options:</span> <span class=\"token atom symbol\">:tls_certificate_check</span><span class=\"token punctuation\">.</span><span class=\"token function\">options</span><span class=\"token punctuation\">(</span>original_config<span class=\"token punctuation\">[</span><span class=\"token atom symbol\">:relay</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span>\n\n    <span class=\"token function\">deliver</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> my_config<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<ol start=\"2\">\n<li>Manually set cert and TLS option</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"elixir\"><pre class=\"language-elixir\"><code class=\"language-elixir\">config <span class=\"token atom symbol\">:your_app</span><span class=\"token punctuation\">,</span> <span class=\"token module class-name\">YourApp</span><span class=\"token punctuation\">.</span><span class=\"token module class-name\">Mailer</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">adapter:</span> <span class=\"token module class-name\">Swoosh</span><span class=\"token punctuation\">.</span><span class=\"token module class-name\">Adapters</span><span class=\"token punctuation\">.</span><span class=\"token module class-name\">SMTP</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\"># adapter: Swoosh.Adapters.Local</span>\n\n  <span class=\"token attr-name\">relay:</span> <span class=\"token string\">\"smtp.gmail.com\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">username:</span> <span class=\"token module class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">get_env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EMAIL_USERNAME\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">password:</span> <span class=\"token module class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">get_env</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EMAIL_PASSWORD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">ssl:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">tls:</span> <span class=\"token atom symbol\">:always</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">auth:</span> <span class=\"token atom symbol\">:always</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">port:</span> <span class=\"token number\">587</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">retries:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">no_mx_lookups:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token attr-name\">tls_options:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">## You need to figure these options out based on your smtp server.... So frustrating</span>\n    <span class=\"token attr-name\">versions:</span> <span class=\"token punctuation\">[</span>:<span class=\"token string\">\"tlsv1.3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token attr-name\">verify:</span> <span class=\"token atom symbol\">:verify_peer</span><span class=\"token punctuation\">,</span>\n    <span class=\"token attr-name\">cacerts:</span> <span class=\"token atom symbol\">:certifi</span><span class=\"token punctuation\">.</span><span class=\"token function\">cacerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token attr-name\">server_name_indication:</span> <span class=\"token string\">~c\"smtp.gmail.com\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token attr-name\">depth:</span> <span class=\"token number\">99</span>\n  <span class=\"token punctuation\">]</span></code></pre></div>\n<p>At the end of the day, it is quite frustrating to provide this manually since Erlang OTP 26 for whatever reason. But it is what it is.</p>","frontmatter":{"title":"Phoenix Elixir Swoosh (Email sending module) issue in OTP 26","date":"May 12, 2024","description":null}},"previous":{"fields":{"slug":"/anger/"},"frontmatter":{"title":"Anger"}},"next":{"fields":{"slug":"/learn-to-understand/"},"frontmatter":{"title":"How to understand thing?"}}},"pageContext":{"id":"ed40a853-0cc4-53c3-a36a-0c7402ff0b92","previousPostId":"a4dddb34-eb74-5a1b-9f5b-ba6e01ed36fc","nextPostId":"af118266-57df-5948-b173-2d79b9880c3c"}},"staticQueryHashes":["1033745147","2841359383"],"slicesMap":{}}