{"componentChunkName":"component---src-templates-blog-post-js","path":"/basic-hell-loop/","result":{"data":{"site":{"siteMetadata":{"title":"Chris' Dialogue"}},"markdownRemark":{"id":"dfbe79c1-0b95-5bfd-99d4-a6cc2b00e269","excerpt":"สมมติว่าคุณทำระบบคิด Commission ให้พนักงานขายทุกๆ สิ้นเดือน โดยมีเงื่อนไขว่า พนักงานขายที่เป็นระดับ Junior จะได้ Commission rate…","html":"<p>สมมติว่าคุณทำระบบคิด Commission ให้พนักงานขายทุกๆ สิ้นเดือน โดยมีเงื่อนไขว่า</p>\n<ol>\n<li>พนักงานขายที่เป็นระดับ Junior จะได้ Commission rate 5%</li>\n<li>พนักงานขายที่เป็นระดับ Senior ได้ Commission rate 7%</li>\n<li>แต่ถ้าพนักงานขายคนนั้นมีสัญญาจ้างพิเศษที่มีโบนัส ต้องให้เพิ่มตามสัญญาจ้างนั้น</li>\n<li>แต่ถ้าพนักงานขายสินค้าพิเศษที่อยู่ในรายการที่เรากำลังทำโปร ได้ Commission 20% เสมอสำหรับสินค้าตัวนั้น</li>\n<li>ถ้าทำยอดรวมเกิน 200,000 บาทแล้ว ให้เพิ่มอีก 3%</li>\n</ol>\n<p>หลายๆ ครั้งผมพบว่าคนเริ่มต้นใหม่จะสร้างลูปนรกขึ้นมาแบบนี้</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesPerson</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  level<span class=\"token operator\">:</span> <span class=\"token string\">\"junior\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"senior\"</span><span class=\"token punctuation\">;</span>\n  contracts<span class=\"token operator\">:</span> Contract<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// มีหลายสัญญา</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Contract</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Field อื่นๆ</span>\n  hasBonus<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  bonusCommission<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesLine</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  productCode<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  amount<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  price<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  totalPrice<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">calculateCommission</span><span class=\"token punctuation\">(</span>\n  salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">,</span>\n  lines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  specialProductCodes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> totalCommission<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> lines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>salesPerson<span class=\"token punctuation\">.</span>level <span class=\"token operator\">===</span> <span class=\"token string\">\"junior\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> specialCode <span class=\"token keyword\">of</span> specialProductCodes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>productCode <span class=\"token operator\">===</span> specialCode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> contract <span class=\"token keyword\">of</span> salesPerson<span class=\"token punctuation\">.</span>contracts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contract<span class=\"token punctuation\">.</span>hasBonus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        commission <span class=\"token operator\">*=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> contract<span class=\"token punctuation\">.</span>bonusCommission<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    totalCommission <span class=\"token operator\">+=</span> commission<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalCommission <span class=\"token operator\">></span> <span class=\"token number\">200000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalCommission <span class=\"token operator\">*=</span> <span class=\"token number\">1.03</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> totalCommission<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>โอเค ลูปนี้มันดูซับซ้อนเนอะ คือผมเขียนตรงไปตรงมาจากลิสต์รายการ Requirement เลย (ซึ่งจริงๆ ผมแอบเซอร์ไพรส์ว่า เจอหลายคนเขียนโปรแกรมแบบนี้เยอะกว่าที่คิดไว้)</p>\n<p>เราจะมาแกะลูปนี้ให้มันอ่านง่ายขึ้นกัน</p>\n<p>ซึ่งมีหลายวิธีมาก</p>\n<p>แต่สำหรับภาคนี้ ผมสาธิตการแกะลูปในสไตล์ Imperative Programming ธรรมดาที่สุดก่อนละกันครับ</p>\n<p>บล็อกนี้ผมตั้งใจจะค่อยๆ แนะนำโปรแกรมเมอร์ที่ยังเขียนโปรแกรมแบบ Imperative ให้ค่อยๆ เขียนได้ดีขึ้นก่อนในสไตล์ที่ไม่หลุดจากที่ตัวเองคุ้นเคยมากนักครับ</p>\n<p>สาวก OOP, Functional programming อย่าพึ่งโกรธไปนะครับ เรามาคิดซะว่าวันนี้เรามีแค่เครื่องมือที่จำกัด มีแค่ Imperative ปกติให้ใช้ก่อนละกัน</p>\n<p>(และส่วนตัวผมเชื่อว่าบางครั้งปัญหาที่โปรแกรมเมอร์เขียนโปรแกรมเก่งขึ้นไม่ได้ซักที เพราะเราไม่สอนสเตปพื้นฐาน เดี๋ยวถ้าจบ Imperative improvement ตรงนี้ คุณจะเห็นเลยว่า ไปต่อจากจุดนี้อีกนิดหน่อยก็ได้ Functional Programming, OOP)</p>\n<hr>\n<p>เทคนิคที่ใช้ในวันนี้ ไม่มีชื่อภาษาอังกฤษ แต่ขอตั้งชื่อภาษาไทยง่ายๆ ว่า แยกการเตรียมข้อมูล กับการคำนวนออกจากกัน</p>\n<p>ที่ลูปนี้มันดูซับซ้อน เพราะเป็นลูปเดียวที่มันรวมหลายๆ Requirement เข้าด้วยกัน 5 ข้อ ถูกรวมอยู่ในลูปเดียวหมด ทุกอย่างปนกันในลูปเดียว</p>\n<p>แต่ถ้าเราแยกก่อนล่ะว่า ยอดขายกับ Sales คนไหนอยู่ใน Requirement ไหน</p>\n<p>ผมว่ามันจะอ่านง่ายขึ้นมากเลยนะ</p>\n<p>งั้น ผมจะเริ่มจากการแยกเคสพิเศษก่อนเลย คือ ใน Requirement นี้จะเห็นว่า ถ้างานขายอยู่ในสินค้าพิเศษ เราจะไม่สนใจ Sales เลยว่าอยู่ระดับไหน</p>\n<p>งั้นเราแยกจุดนี้ออกมาก่อนดีกว่า</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesPerson</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  level<span class=\"token operator\">:</span> <span class=\"token string\">\"junior\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"senior\"</span><span class=\"token punctuation\">;</span>\n  contracts<span class=\"token operator\">:</span> Contract<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// มีหลายสัญญา</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">Contract</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Field อื่นๆ</span>\n  hasBonus<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  bonusCommission<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesLine</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  productCode<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  totalPrice<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">extractLineWithSpecialProduct</span><span class=\"token punctuation\">(</span>\n  lines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  specialProductCodes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> specialProductLines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> otherProductLines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> lines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>specialProductCodes<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>productCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      specialProductLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      otherProductLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>specialProductLines<span class=\"token punctuation\">,</span> otherProductLines<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">calculateCommission</span><span class=\"token punctuation\">(</span>\n  salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">,</span>\n  lines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  specialProductCodes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> totalCommission <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> totalAmount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// แยกส่วนว่าอันไหนเป็นตัวพิเศษ</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>specialProductLines<span class=\"token punctuation\">,</span> normalProductLines<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token function\">extractLineWithSpecialProduct</span><span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">,</span> specialProductCodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// คิดเฉพาะเคสพิเศษ</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> specialProductLines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n    totalAmount <span class=\"token operator\">+=</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> contract <span class=\"token keyword\">of</span> salesPerson<span class=\"token punctuation\">.</span>contracts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contract<span class=\"token punctuation\">.</span>hasBonus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        commission <span class=\"token operator\">+=</span> price <span class=\"token operator\">*</span> contract<span class=\"token punctuation\">.</span>bonusCommission<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> contract <span class=\"token keyword\">of</span> salesPerson<span class=\"token punctuation\">.</span>contracts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contract<span class=\"token punctuation\">.</span>hasBonus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        commission <span class=\"token operator\">+=</span> price <span class=\"token operator\">*</span> contract<span class=\"token punctuation\">.</span>bonusCommission<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    totalCommission <span class=\"token operator\">+=</span> commission<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// คิดเฉพาะเคสปกติ</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> normalProductLines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n    totalAmount <span class=\"token operator\">+=</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>salesPerson<span class=\"token punctuation\">.</span>level <span class=\"token operator\">===</span> <span class=\"token string\">\"junior\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> contract <span class=\"token keyword\">of</span> salesPerson<span class=\"token punctuation\">.</span>contracts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contract<span class=\"token punctuation\">.</span>hasBonus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        commission <span class=\"token operator\">+=</span> price <span class=\"token operator\">*</span> contract<span class=\"token punctuation\">.</span>bonusCommission<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    totalCommission <span class=\"token operator\">+=</span> commission<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalAmount <span class=\"token operator\">>=</span> <span class=\"token number\">200000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalCommission <span class=\"token operator\">*=</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>totalCommission<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>เทคนิคนี้คือแทนที่เราจะพยายามจัดการทุกอย่างให้เสร็จในลูปใหญ่ลูปเดียว เราพยายามแยกออกมาเป็นลูปย่อย แต่ละลูปแทนหนึ่ง Requirement</p>\n<p>ข้อดีของการแยกลูปแบบนี้คือ เราจะรู้เลยว่า ถ้าคนใช้บอกว่า “คอมมิชชั่นพิเศษพังครับ” เราก็จะอ่านแค่ลูปบน แต่ถ้าตนใช้บอกว่า “คอมมิชชั่นปกติพังครับ” เราก็จะอ่านแค่ลูปล่าง</p>\n<p>ซึ่งเราสามารถแยกฟังก์ชั่นให้อ่านง่ายขึ้นได้อีกแบบนี้</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesPerson</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  level<span class=\"token operator\">:</span> <span class=\"token string\">\"junior\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"senior\"</span><span class=\"token punctuation\">;</span>\n  contracts<span class=\"token operator\">:</span> Contract<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// มีหลายสัญญา</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">Contract</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Field อื่นๆ</span>\n  hasBonus<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  bonusCommission<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesLine</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  productCode<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  totalPrice<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">extractLineWithSpecialProduct</span><span class=\"token punctuation\">(</span>\n  lines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  specialProductCodes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> specialProductLines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> otherProductLines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> lines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>specialProductCodes<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>productCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      specialProductLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      otherProductLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>specialProductLines<span class=\"token punctuation\">,</span> otherProductLines<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">specialCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">,</span> salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> contract <span class=\"token keyword\">of</span> salesPerson<span class=\"token punctuation\">.</span>contracts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contract<span class=\"token punctuation\">.</span>hasBonus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      commission <span class=\"token operator\">+=</span> price <span class=\"token operator\">*</span> contract<span class=\"token punctuation\">.</span>bonusCommission<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> commission<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">normalCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">,</span> salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>salesPerson<span class=\"token punctuation\">.</span>level <span class=\"token operator\">===</span> <span class=\"token string\">\"junior\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> contract <span class=\"token keyword\">of</span> salesPerson<span class=\"token punctuation\">.</span>contracts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contract<span class=\"token punctuation\">.</span>hasBonus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      commission <span class=\"token operator\">+=</span> price <span class=\"token operator\">*</span> contract<span class=\"token punctuation\">.</span>bonusCommission<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> commission<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">calculateCommission</span><span class=\"token punctuation\">(</span>\n  salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">,</span>\n  lines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  specialProductCodes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> totalCommission <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> totalAmount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// แยกส่วนว่าอันไหนเป็นตัวพิเศษ</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>specialProductLines<span class=\"token punctuation\">,</span> normalProductLines<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token function\">extractLineWithSpecialProduct</span><span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">,</span> specialProductCodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// คิดเฉพาะเคสพิเศษ</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> specialProductLines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalAmount <span class=\"token operator\">+=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n    totalCommission <span class=\"token operator\">+=</span> <span class=\"token function\">specialCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> salesPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// คิดเฉพาะเคสปกติ</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> normalProductLines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalAmount <span class=\"token operator\">+=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n    totalCommission <span class=\"token operator\">+=</span> <span class=\"token function\">normalCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> salesPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalAmount <span class=\"token operator\">>=</span> <span class=\"token number\">200000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalCommission <span class=\"token operator\">*=</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>totalCommission<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ทีนี้เราจะเห็นว่าในฟังก์ชั่น calculateCommission นั้น ความเป็นลูปนรกหายไปเยอะมากเลย</p>\n<p>จากที่เรามีลูปใหญ่ๆ ที่อ่านยากสูปนึง เรามีลูปง่ายๆ สองลูปแล้ว</p>\n<p>แถมถ้าลูกค้าบอกว่า Commission แบบพิฌศษพังครับ เรารู้แล้วว่าจะไปอ่านจากตรงไหนเนอะ เพราะเป็นไปได้สองอย่าง</p>\n<ol>\n<li><code class=\"language-text\">extractCommission</code> เราสะกัดข้อมูลที่เข้าเคสมาผิด</li>\n<li><code class=\"language-text\">specialCommission</code> ทำงานผิด</li>\n</ol>\n<p>ตอนนี้ผมเชื่อว่าเราจะแก้บั๊กได้ง่ายขึ้น</p>\n<p>ถัดมาตรงนี้เราจะเห็นว่าใน Special Commission และ Normal Comission เราก็มีส่วนของการต้องคิดเงินพิเศษให้ Sales ที่มีโบนัส เหมือนกันทั้งคู่</p>\n<p>เห็นของที่ทั้งหน้าตาเหมือนกันแถมเป็น Concept ในธุรกิจแบบเดียวกันยังงี้ เราก็สามารถแยกเป็นฟังก์ชั่นได้ตามนี้</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesPerson</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  level<span class=\"token operator\">:</span> <span class=\"token string\">\"junior\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"senior\"</span><span class=\"token punctuation\">;</span>\n  contracts<span class=\"token operator\">:</span> Contract<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// มีหลายสัญญา</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">Contract</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Field อื่นๆ</span>\n  hasBonus<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  bonusCommission<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> <span class=\"token class-name\">SalesLine</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  productCode<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  totalPrice<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">extractLineWithSpecialProduct</span><span class=\"token punctuation\">(</span>\n  lines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  specialProductCodes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> specialProductLines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> otherProductLines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> lines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>specialProductCodes<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>productCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      specialProductLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      otherProductLines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>specialProductLines<span class=\"token punctuation\">,</span> otherProductLines<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">applyBonusContract</span><span class=\"token punctuation\">(</span>\n  originalCommission<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n  price<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span>\n  salesPerson<span class=\"token operator\">:</span> SalesPerson\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> originalCommission<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> contract <span class=\"token keyword\">of</span> salesPerson<span class=\"token punctuation\">.</span>contracts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contract<span class=\"token punctuation\">.</span>hasBonus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      commission <span class=\"token operator\">+=</span> price <span class=\"token operator\">*</span> contract<span class=\"token punctuation\">.</span>bonusCommission<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> commission<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">specialCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">,</span> salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n\n  commission <span class=\"token operator\">=</span> <span class=\"token function\">applyBonusContract</span><span class=\"token punctuation\">(</span>commission<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> salesPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> commission<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">normalCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">,</span> salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> price <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> commission <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>salesPerson<span class=\"token punctuation\">.</span>level <span class=\"token operator\">===</span> <span class=\"token string\">\"junior\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    commission <span class=\"token operator\">=</span> price <span class=\"token operator\">*</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  commission <span class=\"token operator\">=</span> <span class=\"token function\">applyBonusContract</span><span class=\"token punctuation\">(</span>commission<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> salesPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> commission<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">calculateCommission</span><span class=\"token punctuation\">(</span>\n  salesPerson<span class=\"token operator\">:</span> SalesPerson<span class=\"token punctuation\">,</span>\n  lines<span class=\"token operator\">:</span> SalesLine<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  specialProductCodes<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> totalCommission <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> totalAmount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// แยกส่วนว่าอันไหนเป็นตัวพิเศษ</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>specialProductLines<span class=\"token punctuation\">,</span> normalProductLines<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n    <span class=\"token function\">extractLineWithSpecialProduct</span><span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">,</span> specialProductCodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// คิดเฉพาะเคสพิเศษ</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> specialProductLines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalAmount <span class=\"token operator\">+=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n    totalCommission <span class=\"token operator\">+=</span> <span class=\"token function\">specialCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> salesPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// คิดเฉพาะเคสปกติ</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> line <span class=\"token keyword\">of</span> normalProductLines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalAmount <span class=\"token operator\">+=</span> line<span class=\"token punctuation\">.</span>totalPrice<span class=\"token punctuation\">;</span>\n    totalCommission <span class=\"token operator\">+=</span> <span class=\"token function\">normalCommission</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">,</span> salesPerson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalAmount <span class=\"token operator\">>=</span> <span class=\"token number\">200000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    totalCommission <span class=\"token operator\">*=</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>totalCommission<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>จบแล้วครับ</p>\n<p>ถ้าเราเทียบกับเวอร์ชั่นแรกที่เป็นลูปนรก เราจะเห็นว่าเวอร์ชั่นใหม่ เรามีลูปง่ายๆ หลายๆ ลูปแทน และแต่ละลูปถูกแยกมาตรงกับ Requirement แต่ละข้อ</p>\n<p>แถม Requirement แต่ละข้อ มีฟังก์ชั่นของตัวเองอีกต่างหาก เวลาข้อไหนลูกค้าบ่นว่าพัง เรามีที่แยกให้ดูชัดเจนเป็นระเบียบเลย</p>\n<p>เทคนิคง่ายๆ ที่เราใช้ในครั้งนี้มีแค่สองเทคนิค</p>\n<ol>\n<li>DRY หรือแยกส่วนโค้ดซ้ำๆ ออกมา เราใช้ในตอนที่เราสร้าง <code class=\"language-text\">applyContract</code> ซึ่งอันนี้เป็นเทคนิคปกติ</li>\n<li>เมื่อเราเจอลูปใหญ่ที่วนลูปข้อมูลชุดนึง แล้วทำหลายๆ Requirement เราสามารถใช้เทคนิค “แยกการเตรียมข้อมูล กับการคำนวนออกจากกัน” ได้ คือเตรียมข้อมูลให้ตรงกับ Requirement ใด Requirement โดยเฉพาะก่อน แล้วแยกเป็นคนละลูป</li>\n</ol>\n<p>แล้วโค้ดนอกจากจะอ่านง่ายขึ้นเฉยๆ (ซึ่งตรงนี้อาจจะ Subjective นิดนึง) แล้วยังมีข้อดีคือว่าลูกค้าบ่นมี Bug ใน Requirement ไหน เรามีที่เฉพาะที่หาเจอแล้ว ไม่ต้องไปนั่งไล่อ่านทั้งลูปใหญ่ๆ (ซึ่งตรงนี้ผมว่าเป็นข้อดีชัดเจน ไม่ว่าคุณจะคิดว่าโค้ดเวอร์ชั่นใหม่อ่านง่ายหรือยาก โค้ดชุดใหม่ก็มีข้อดีตรงนี้จริงๆ)</p>\n<hr>\n<p>ตรงนี้บางคนอาจจะถามว่า แล้ววนลูปสองที รอบแรกคัดแยกข้อมูล รอบหลังเอาข้อมูลคำนวน ไม่เปลือง Performance แย่เหรอ</p>\n<p>ผมจะบอกว่า</p>\n<ol>\n<li>วนลูป Constant time บนข้อมูลแบบนี้ ถ้าไม่ถึหมื่นตัว ผมมองว่าผลน้อยมากๆ ลองวัดผลได้ครับ ดูว่ามีนัยสำคัญมั้ย</li>\n<li>ถ้ายังบอกว่า ไม่เอา ไม่ชอบ เปลือง ไซส์ข้อมูลใหญ่ เราก็ยังใช้เทคนิคแบบเดียวกันได้ แต่ต้องใช้วิธีการของ Functional Programming ที่เรียกว่า Lazy Evaluation เข้ามาช่วยอีกทีได้ โดยไม่ต้องกลับไปเขียนลูปนรกที่อ่านและไล่ตามบั๊กยากมาก โดยบอกว่า “ก็มันเร็วกว่า ลูปทีเดียว” แต่ผมขอละเรื่อง Lazy Evaluation ไว้ในโอกาสหน้าครับ</li>\n</ol>\n<hr>\n<p>ผมขอ Generalized เทคนิคนี้ออกมาเป็นหลักการนิดนึง</p>\n<p>หลักการคือ ถ้าคุณมี Loop นรกที่มีหน้าตาคล้ายๆ ยังงี้</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> element <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">condition</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ทำอะไรที่ซับซ้อน ลูปข้างใน if ข้างในอีกเยอะ</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ทำอีกอย่างนึงที่ซับซ้อนพอกัน</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>เราสามารถแก้เป็นเป็นแบบนี้ได้เสมอ</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">\n<span class=\"token keyword\">const</span> listToDoThisThing <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> listToDoThatThing <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> elemet <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">condition</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    listToDoThisThing<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    listToDoThatThing<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> element <span class=\"token keyword\">of</span> listToDoThisThing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// ทำอะไรที่ซับซ้อน ลูปข้างใน if ข้างในอีกเยอะ</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> element <span class=\"token keyword\">of</span> listToDoThatThing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// ทำอีกอย่างนึงที่ซับซ้อนพอกัน</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>เราแยกลูปที่ยากซับซ้อน if, for ข้างในเยอะแยะไปหมด ออกมาเป็นสองลูปที่ง่ายขึ้นได้ตามนี้ครับ</p>\n<p>และยิ่งถ้าการทำแต่ละอย่างเป็นเงื่อนไขของ Requirement คนละข้อกัน ยิ่งเราแยกยังงี้ เรายิ่งไล่ตามปัญหาเวลาผู้ใช้บ่นหรือด่า ได้ง่ายขึ้นเยอะครับ</p>\n<p>หมายเหตุ</p>\n<ol>\n<li>สำหรับแฟนๆ Functional programming คุณมาถึงจุดนี้แล้วคุณก็แค่ใช้ Filter,Map แทนการวนลูป แล้วบางอันคุณอาจจะ Inline ได้เลยเพราะมันจะเหลือบรรทัดเดียว ก็อาจจะไม่ต้องมาตั้งฟังก์ชั่นใหม่เยอะเท่าทำ Imperative ยังงี้ แถมสร้าง Pipe ที่ Lazy Evaluation แล้ววนลูปรอบเดียวได้เลยนะ</li>\n<li>สำหรับแฟนๆ OOP คุณอาจจะมองเห็นว่าแต่ละกันคำนวนอาจจะทำเป็น CommissionStrategy ที่ Polymorph ตามประเภทของงานขายได้ (แต่อันนั้นเราจะไม่ได้แกะลูปละ เราแค่ทำของในลูปให้ Polymorph ให้อ่านง่ายขึ้น)</li>\n</ol>","frontmatter":{"title":"Basic ของการแกะลูปนรก","date":"December 21, 2024","description":null}},"previous":{"fields":{"slug":"/discord-architecture-alternative/"},"frontmatter":{"title":"Alternative to Discord architecture"}},"next":null},"pageContext":{"id":"dfbe79c1-0b95-5bfd-99d4-a6cc2b00e269","previousPostId":"2bdd4a27-933d-54bb-97fa-f5aea58cadfc","nextPostId":null}},"staticQueryHashes":["1033745147","2841359383"],"slicesMap":{}}