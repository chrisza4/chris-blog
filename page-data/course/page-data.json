{"componentChunkName":"component---src-templates-blog-post-js","path":"/course/","result":{"data":{"site":{"siteMetadata":{"title":"Chris' Dialogue"}},"markdownRemark":{"id":"300d04ab-701e-5491-bdaf-2bf0bda77307","excerpt":"TLDR; คอร์ส the art of humanistic architecture design ที่จะสอนเรื่อง “การดีไซน์” software architecture…","html":"<h2>TLDR;</h2>\n<p>คอร์ส the art of humanistic architecture design ที่จะสอนเรื่อง “การดีไซน์” software architecture โดยใช้ศาสตร์ความเป็นมนุษย์เข้ามาเสริม จากประสบการณ์ผมเองที่ synthesize ศาสตร์จิตวิทยาความเป็นมนุษย์ (humanistic psychology) อย่าง Satir enneagram งาน ux/ui ไปจนถึง math และ category theory เพื่อให้มองไปไกลกว่าแค่ตอบโจทย์ตรงหน้า แต่รู้ว่าเราจะเข้าถึงความเป็นมนุษย์เพื่อเลือกคำตอบที่มี impact ที่ดี จากคำตอบที่เป็นไปได้ร้อยอย่างพันอย่างได้อย่างไร</p>\n<h2>Description</h2>\n<p>“In the software engineering world full of trade-offs and competing opinions on what is the best, how do you really decide?</p>\n<p>ในโลก Software ที่ทุกอย่างเป็น Trade-offs ปัญหาแบบเดียวมี Solution มีคำตอบที่แก้ไขได้เป็นพันๆ แบบ แต่ละแบบมี Trade-offs ต่างกัน และก็มีคนมากมายเหลือเกินให้ความเห็นว่า trade-offs แบบของฉันดีที่สุด คุณตัดสินใจอย่างไร</p>\n<p>กระบวนการตัดสินใจตรงนี้มันไม่สามารถที่จะอธิบายได้ด้วยวิทยาศาสตร์อย่างเดียว เหมือนกับลูกค้าคุณหิวข้าว คุณจะทำกะเพราให้เขากินก็ได้ คุณจะกินข้าวไข่เจียวให้เขากินก็ได้ มันแก้ปัญหาหิวข้าวของเขาได้เหมือนกัน แต่เราเลือกทำอะไรให้เขากินดีนะ และถ้าเลือกสิ่งข่าวไข่เจียว ที่มาที่ไปในการเลือกคืออะไรนะ ถ้าเลือกข้าวกะเพราะ ที่มาที่ไปคืออะไร</p>\n<p>ทีนี้ลองมาดูในงานใกล้ตัวกว่านั้นบ้างในฐานะโปรแกรมเมอร์ ถ้าลูกค้ามีปัญหา Scale เราจะให้เขาใช้ Monolith ต่อไปมั้ย หรือต้องรื้อทำ Microservice เท่านั้น หรือแค่ซื้อเซิฟแรงๆ ทั้งสามอย่างแก้ปัญหาได้หมด แต่เราเลือกแบบไหนให้ลูกค้าดีล่ะ</p>\n<p>ในโลกของ Software Architecture เราพูดตลอดว่าทุกอย่างมี Trade-offs\nแต่กระบวนการตัดสินใจเลือก Trade-offs มันมายังไง</p>\n<p>ถ้าเราจับด้วยตรรกะล้วนๆ โดยไม่ให้คุณค่าอะไรเลย ให้คุณค่าทุก trade-offs เท่ากันหมด มันไม่มีทางเลือกได้เลยว่าอะไรดีกว่าอะไร แต่ในความเป็นจริง มันก็มี Solution ที่ถูกใจและไม่ถูกใจ เวิร์คและไม่เวิร์คอยู่เสมอๆ ในแทบจะทุกๆ โปรเจ๊กต์</p>\n<p>เมื่อถึงจุดนี้มันจะไปสู่คำถามว่า แล้วถ้างั้นมนุษย์เรามีกระบวนการเลือกให้คุณค่าอย่างไร ทำไมบางทีสิ่งนั้นมีคุณค่ากว่าสิ่งนี้ นั่นคือสิ่งที่ลึกลงไปอีกขั้นหนึ่ง ที่จะเป็นกุญแจไขว่า Trade-offs ต่างๆ จะเลือกแบบไหน</p>\n<p>แล้วถ้าเราเข้าใจจุดนั้นแล้วเราจะนำเอาคุณค่าของมนุษย์มาเชื่อมต่อกับการออกแบบได้อย่างไรบ้าง หรือเราจะจัดการชุดคุณค่าของมนุษย์ระหว่างการออกแบบอย่างไรถ้าชุดคุณค่าของแต่ละคนที่มีส่วนร่วมมันไม่เหมือนกันและอาจจะขัดแย้งกันเอง</p>\n<p>คอร์สนี้เป็นการตกผลึกส่วนตัวของผู้สอนที่ใช้ศาสตร์จิตวิทยาสาย Humanistic เข้ามาผสมกับการออกแบบ Software Architecture ซึ่งคอร์สนี้จะพาไปเข้าใจในเบื้องต้นถึงกระบวนการการให้คุณค่าของมนุษย์ ของตัวเองเราเอง ของผู้อื่น และนำเอาคุณค่าเหล่านั้นมาใช้เชื่อมกับการออกแบบได้ และสามารถเอาชุดคุณค่ามาร่วมเป็นปัจจัยในการทำ Architectural Decision ต่างๆ ได้</p>\n<p>สำหรับคนที่ติดตามผู้สอนมาซักพัก คอร์สนี้จะเปิดเผยว่าเนื้อหา Talk ต่างๆ ที่ผมเคยพูด งานสอนอื่นๆ ที่ผมทำมาจากพื้นฐานเบื้องลึกอย่างไร ทำไมหลายๆ อาจจะมองว่าผมพูดเข้าใจง่าย มาจากเลนส์มุมมองอย่างไรกันแน่ แล้วจะเข้าใจทั้งฐานคิดและวิธีสื่อสารเพื่อนำปรับไปใช้กับทีมของคุณได้</p>\n<ul>\n<li><a href=\"https://www.facebook.com/chakrit.likitkhajorn/posts/pfbid02UETwFp5SptBqWr14EXpVn5yGGsrXQrgFhZr2QhpKH8Bo9us35W8u1NSsy6QwGEkxl?__cft__%5B0%5D=AZXS11dgQsmKjc-UOjjJxMAZp9u8LVLqACCAKD2WJlcwNH00-jzor8QJl8abLWObMtQa5GdjxwmMi7MrsTrp_cvuaMnCRLmGuOz4HEpZbUVc3VJKmxq0ZEe3ceJt9z0q_uI&#x26;__tn__=%2CO%2CP-R\">คำโปรยแรก</a></li>\n<li><a href=\"https://www.facebook.com/chakrit.likitkhajorn/posts/pfbid02XWvnJVyVk5AXMB9yQ9vfKUNZdRGahUCxYa2uNuyPRp1zGoAZM1gFidFBX3Mj8Ccql\">Teaser</a></li>\n<li><a href=\"https://www.facebook.com/chakrit.likitkhajorn/posts/pfbid0nEWpLYF3URBMAUWStpwPL92KvKxMiyL9ZzPv2g1Be14K6uqJxRDhzRX4Ybxj9bVal\">คำโปรยสอง</a></li>\n</ul>\n<h2>เหมาะสำหรับใคร</h2>\n<p>คอร์สนี้เหมาะสำหรับคนที่มีประสบการณ์การทำงานมาระดับนึง และอยู่ในจุดที่รับโจทย์มาแล้วต้องเลือก Solution ที่ดีที่สุดจากความเป็นไปได้หลายรูปแบบ ไม่ว่าจะเป็นการเลือกภาษา เลือกเฟรมเวิร์ค เลือก Coding Standard หรือเลือก Collaboration Scheme ในระดับองค์กร และเราต้องการ “ออกแบบ” สิ่งที่เหมาะที่สุดสำหรับบริบทนั้น</p>\n<p>คอร์สนี้เหมาะมากเป็นพิเศษกับคนที่ต้องตัดสินใจเรื่อง Architecture ให้คนอื่น ไม่ว่าชื่อตำแหน่งคุณจะเป็น Senior, Lead, Principal, Staff, Architect, VP, CTO ถ้างานของคุณประกอบไปด้วยการที่ต้องตัดสินใจออกแบบ Architecture ให้เพื่อนร่วมงานใช้ คอร์สนี้จะเหมาะกับคุณมาก เราจะเจาะปัญหาพวกนี้เป็นหลัก</p>\n<p>คอร์สนี้ไม่เหมาะกับโปรแกรมเมอร์ที่ต้องการหา Solution ท่าอะไรซักท่ามาตอบโจทย์ของลูกค้าให้ได้ คอร์สจะไม่ค่อยได้เจาะเรื่องนั้น เราจะเรียนกันในสถานการณ์ที่การหา Solution อันนึงเป็นเรื่องไม่ยากนัก เราสามารถคิดท่าได้มากมายหลายท่ามากในการแก้ปัญหา และเราสนใจใครรู่ว่าท่าไหนจะเหมาะที่สุด</p>\n<p>Recommend profile:</p>\n<ul>\n<li>เคยทำงานมาแล้ว 2 ปี</li>\n<li>เคยจับ Framework, Architecture มากกว่า 1 แบบขึ้นไป</li>\n<li>มีประสบการณ์ที่ต้องร่วมตัดสินใจเลือกรูปแบบการทำงานหรือ Architecture, Framework, Library ให้ทีม</li>\n<li>คอร์สจะ Assume ความรู้พื้นฐานเหล่านี้ Dependency Injection, IoC container, Unit testing, Object oriented Programming, Functional programming, MVC Architecture, Event and Observer Pattern อย่างน้อยพอรู้ว่ามันคืออะไรนิดๆ หน่อยๆ ไม่ต้องสันทัดมากก็ได้</li>\n</ul>\n<h3>โจทย์ตัวอย่างที่จะคุยกันในคอร์ส</h3>\n<p>ไม่ว่าเราจะใช้ Monolith หรือ Microservices เราสามารถสร้างซอฟต์แวร์ขนาดใหญ่ได้ทั้งคู่และมีคนเคยทำสำเร็จมาแล้วทั้งคู่ ทั้งคู่สามารถเป็น Solution ของระบบได้ ทำซอฟต์แวร์จนเสร็จได้ คำถามคือ เราจะเลือกสิ่งไหนแล้วทำไมในเมื่อมันใช้ได้ทั้งคู่ เราดูยังไง หรือถ้าเลือกตรงกลางๆ แล้วเราควรจะมี Service กี่ตัวเล็กขนาดไหนใหญ่ขนาดไหน ในเมื่อสุดท้ายไม่ว่าเลือกอะไรองค์กรก็ยังทำงานของมันได้ทั้งสิ้น</p>\n<p>เราจะคุยกันผ่าน Event หรือ RPC ดี ทั้งคู่เป็น Communication Scheme ที่ใช้ได้ทั้งคู่ ไม่ว่า Service สองตัวที่ต้องการสื่อสารกันจะเป็นแบบไหน ทั้งคู่สามารถใช้แก้ปัญหาได้ถ้าเราพยายามมากพอกับมัน แต่แน่นอนมันมีบริบทที่ Event แก้ปัญหาได้เหมาะกว่าและ RPC แก้ปัญหาได้เหมาะกว่า คำถามที่เราจะมาเจาะกันคือ จุดไหน แล้วความเหมาะสมเกิดจากอะไร</p>\n<p>เราจะใช้ Angular หรือ React ดีนะ หรือไม่ใช้อะไรเลยดี ในเมื่อทั้งคู่สามารถสร้าง Frontend แบบไหนตามใจลูกค้าได้ทั้งคู่</p>\n<p>Framework อย่าง Rails กับสิ่งเล็กๆ อย่าง Express ทำได้ดีทั้งคู่มีคนชอบและก็มีคนด่าทั้งคู่ ทำไมผมถึงไม่เคยชอบ Rails แต่มองว่ามันเป็นของดี</p>\n<p>ทำไม Golang ถึงได้เป็นภาษาที่ผมมองว่ามัน Well-designed ทั้งๆ ที่มันไม่มีฟีเจอร์หลายอย่างและกว่าจะมี Generic ก็นานมาก</p>\n<p>ในหลายมุมมอง Functional programming กับ OOP มันเสริมกันได้ และในหลายมุมมองทำไมมีคนมากมายบอกว่ามันขัดกันเอง มันเกิดจากมุมมองต่างกันอย่างไรแล้วเราในฐานะนักออกแบบหรือนักดีไซน์ เราจะวางระบบไว้ใน Spectrum ประมาณไหนจากอะไร</p>\n<h2>เนื้อหา</h2>\n<h4>Day 1</h4>\n<ul>\n<li><strong>Prelude: Problem &#x26; Disappointment</strong> Anatomy ของ “ปัญหา” และ “ความไม่พอใจ”</li>\n<li><strong>Episode 1: Satir</strong> การใช้ซาเทียร์ในการทำความเข้าใจเบื้องลึกที่อยู่ใต้ “ปัญหา”</li>\n<li><strong>Episode 2: Vision in humanistic lens</strong> สร้าง Architecture Vision ที่สามารถ Resonate กับมนุษย์ได้ดี สอดคล้องกับ Value ที่ตั้งไว้ รวมไปถึงการสื่อสาร และ Synthesis คุณค่าของมนุษย์ออกมาเป็นภาพที่เข้าใจตรงกันได้ง่าย โดยใช้หลักจิตวิทยาเข้ามาช่วย</li>\n</ul>\n<h4>Day 2</h4>\n<ul>\n<li><strong>Episode 3: Abstraction</strong> การออกแบบ Abstraction (หรือเลือก Abstraction ที่คนอื่นออกแบบใน Framework และ Design Pattern ต่างๆ มาใช้และปรับปรุง)</li>\n<li><strong>Episode 4: Developer Testing</strong> ประยุกต์ใช้ศาสตร์ User Testing ของ UX เพื่อเอามา Validate งานออกแบบ</li>\n<li>\n<p><strong>Episode 5: Design Pattern &#x26; Case studies</strong> (in humanistic architecture lens) นำเอาสิ่งที่เรียนมาทั้งหมดมาวิเคราะห์ Case study ของการออกแบบต่างๆ ให้เราเลือกใช้และเลือกออกแบบอย่างเข้าใจ และผสมผสานประยุกต์ได้ตามความเหมาะสมของบริบท</p>\n<ul>\n<li>Factory, IoC Container &#x26; Polymorphism</li>\n<li>Object oriented programming vs Functional Programming Spectrum</li>\n<li>RPC vs Event-driven Microservices Specturm</li>\n</ul>\n</li>\n</ul>\n<p>(และ Case study อื่นๆ หากมีเวลาเหลือ เช่น Log Formatting, GraphQL vs RESTFul design)</p>\n<h2>เวลาเรียน</h2>\n<p>คอร์ส 1 (Active): วันที่ 4-5 กุมภาพันธ์ 2023 เวลา 9.00-16.30</p>\n<p>สถานที่: <a href=\"https://www.google.com/maps/place/Geeky+Base/@13.852423,100.5803335,17z/data=!3m1!4b1!4m5!3m4!1s0x30e29d2386568ec7:0xdf0eb043fcd08544!8m2!3d13.8524221!4d100.5825129\">Geeky Base</a></p>\n<p>รับผู้เรียนทั้งหมดจำนวน 20 คน</p>\n<p>ราคา: 7,000 บาท</p>\n<p>โอนเงินจองได้ที่ Promptpay 0879337879 นายชาคริต ลิขิตขจร</p>\n<p>แจ้งโอนเงินได้ที่</p>\n<ul>\n<li>Facebook messenger: <a href=\"https://www.facebook.com/chakrit.likitkhajorn\">Chakrit Likitkhajorn</a></li>\n<li>Email: chakrit.lj@gmail.com</li>\n</ul>\n<p>(หากปิดคอร์สแล้วจะแจ้งให้ทราบทางเว็บเพจนี้)</p>","frontmatter":{"title":"Humanistic Architecture","date":null,"description":null}},"previous":null,"next":null},"pageContext":{"id":"300d04ab-701e-5491-bdaf-2bf0bda77307","previousPostId":null,"nextPostId":null}},"staticQueryHashes":["1033745147","2841359383"]}