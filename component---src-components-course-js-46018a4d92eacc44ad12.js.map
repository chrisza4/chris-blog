{"version":3,"file":"component---src-components-course-js-46018a4d92eacc44ad12.js","mappings":"iKAWA,MAAMA,EAAoBC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACrCE,EAAAA,cAAA,OAAKC,MAAO,CAAEC,UAAW,KAAOH,EAAe,EAG3CI,EAAgBC,IAAA,IAAC,SAAEL,GAAUK,EAAA,OACjCJ,EAAAA,cAAA,OAAKC,MAAO,CAAEI,WAAY,GAAIC,QAAS,OAAQC,cAAe,WAC3DR,EACG,EAGFS,EAAoBC,IAAA,IAAC,SAAEV,GAAUU,EAAA,OACrCT,EAAAA,cAAA,MAAIC,MAAO,CAAEK,QAAS,QAASJ,UAAW,IAAMH,EAAc,EA+DhE,IA5DYW,KAAO,IAADC,EAAAC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAwBtBC,EAA+B,QAAzBL,EAAGG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBK,OAEjCG,EAASL,SAAY,QAARF,EAAJE,EAAMK,cAAM,IAAAP,GAAiB,QAAjBC,EAAZD,EAAcQ,uBAAe,IAAAP,OAAzB,EAAJA,EAA+BQ,MAE9C,OACErB,EAAAA,cAAA,OAAKsB,UAAU,OACZH,GACCnB,EAAAA,cAACuB,EAAAA,EAAK,CACJF,MAAOF,EACPK,KAAKR,aAAM,EAANA,EAAQS,OAAI,GACjBH,UAAU,aACVI,SAAU,CACRC,aAAa,OAEfC,QAAQ,WAGXZ,aAAM,EAANA,EAAQS,OACPzB,EAAAA,cAACG,EAAa,CACZF,MAAO,CAAEI,WAAY,GAAIC,QAAS,OAAQC,cAAe,WAEzDP,EAAAA,cAAA,WACEA,EAAAA,cAACQ,EAAiB,KAAC,WAASQ,EAAOS,KAAK,MAE1CzB,EAAAA,cAAA,YAAMgB,aAAM,EAANA,EAAQa,UAAW,MACzB7B,EAAAA,cAACH,EAAiB,KAAC,4BACS,IAC1BG,EAAAA,cAAA,KAAG8B,KAAK,iCAAgC,kBAI1C,C,oFCxCV,UAlCehC,IAAyB,IAADa,EAAA,IAAvB,KAAEG,EAAI,SAAEiB,GAAUjC,EAChC,MAAMkC,EAAOlB,EAAKmB,eACZC,GAAkC,QAAtBvB,EAAAG,EAAKG,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBwB,QAAK,QAE/C,OACEnC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACoC,EAAAA,EAAM,CAACL,SAAUA,EAAUI,MAAOD,GACjClC,EAAAA,cAACqC,EAAAA,EAAG,CACFF,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpDxC,EAAAA,cAAA,WACEsB,UAAU,YACVmB,WAAS,EACTC,SAAS,6BAET1C,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAI2C,SAAS,YAAYX,EAAKM,YAAYH,OAC1CnC,EAAAA,cAAA,SAAIgC,EAAKM,YAAYM,OAEvB5C,EAAAA,cAAA,WACE6C,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX3C,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACU,EAAAA,EAAG,SAIT,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/course.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst WhereIWorkSection = ({ children }) => (\n  <div style={{ marginTop: 20 }}>{children}</div>\n)\n\nconst AuthorSection = ({ children }) => (\n  <div style={{ marginLeft: 50, display: \"flex\", flexDirection: \"column\" }}>\n    {children}\n  </div>\n)\n\nconst AuthorNameSection = ({ children }) => (\n  <h2 style={{ display: \"block\", marginTop: 0 }}>{children}</h2>\n)\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/my-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 130, height: 130, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n          loading=\"eager\"\n        />\n      )}\n      {author?.name && (\n        <AuthorSection\n          style={{ marginLeft: 50, display: \"flex\", flexDirection: \"column\" }}\n        >\n          <div>\n            <AuthorNameSection>Hi. I'm {author.name}.</AuthorNameSection>\n          </div>\n          <div>{author?.summary || null}</div>\n          <WhereIWorkSection>\n            I am currently working at{\" \"}\n            <a href=\"https://www.thoughtworks.com/\">ThoughtWorks</a>\n          </WhereIWorkSection>\n        </AuthorSection>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout/mainLayout\"\nimport SEO from \"../components/seo\"\n\nconst Course = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <>\n      <Layout location={location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n            <p>{post.frontmatter.date}</p>\n          </header>\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n          <hr />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n      </Layout>\n    </>\n  )\n}\n\nexport default Course\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["WhereIWorkSection","_ref","children","React","style","marginTop","AuthorSection","_ref2","marginLeft","display","flexDirection","AuthorNameSection","_ref3","Bio","_data$site$siteMetada","_data$avatar","_data$avatar$childIma","data","useStaticQuery","author","site","siteMetadata","avatar","childImageSharp","fixed","className","Image","alt","name","imgStyle","borderRadius","loading","summary","href","location","post","markdownRemark","siteTitle","title","Layout","SEO","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}